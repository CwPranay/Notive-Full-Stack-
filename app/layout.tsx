import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google"; // You're using Next.js font optimization
import "./globals.css";
import { ThemeProvider } from "../components/themeprovider"; // Your custom ThemeProvider (likely a client component)

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Notive : Active Notes Taking App",
  description: "Generated by Pranay",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    // Add suppressHydrationWarning to the html tag
    // This tells React to ignore differences in attributes on this element
    // during hydration, which is exactly what next-themes needs.
    <html lang="en" suppressHydrationWarning>
      <head>
        <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider
          attribute="class" // next-themes will add 'dark' or 'light' class to the <html> tag
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          {children}
        </ThemeProvider>
      </body>
    </html>
  );
}